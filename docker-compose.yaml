version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fastenmind-postgres
    environment:
      POSTGRES_USER: fastenmind
      POSTGRES_PASSWORD: fastenmind123
      POSTGRES_DB: fastenmind
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fastenmind-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: fastenmind-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fastenmind-network

  # N8N Workflow Automation
  n8n:
    image: n8nio/n8n
    container_name: fastenmind-n8n
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=fastenmind123
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=Asia/Taipei
      - N8N_ENCRYPTION_KEY=fastenmind-encryption-key
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=fastenmind
      - DB_POSTGRESDB_PASSWORD=fastenmind123
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/workflows
    depends_on:
      - postgres
    networks:
      - fastenmind-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastenmind-backend
    environment:
      - DATABASE_URL=postgresql://fastenmind:fastenmind123@postgres:5432/fastenmind?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key
      - PORT=8080
      - N8N_URL=http://n8n:5678
      - N8N_API_KEY=your-n8n-api-key
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - n8n
    networks:
      - fastenmind-network
    volumes:
      - ./backend:/app
    command: ["go", "run", "cmd/server/main.go"]

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fastenmind-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api/v1
      - NEXT_PUBLIC_N8N_URL=http://localhost:5678
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - fastenmind-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: ["npm", "run", "dev"]

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fastenmind-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fastenmind.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - fastenmind-network

volumes:
  postgres_data:
  redis_data:
  n8n_data:

networks:
  fastenmind-network:
    driver: bridge